#library "wdivote"
#include "zcommon.acs" 
//#include "p_penalties.acs"   
#import "redrum.acs"
#import "classic.acs"
#import "mdistuff.acs"




str voteindex[8] =
{
"NOTHING",
"NIGHTMARE DIFFICULTY FOR MURDERER",
"CRAZY MODE",
"EX MAP: UNLOCK A SECRET (FOR HIDDEN ENDINGS)",
"EVERYONE DUN IT",
"ABORT THIS MAP, SKIP TO A SECRET SHITTY MAP",
"ABLE TO CALL ANY VOTE NEXT ROUND",
"ONE HIT KILL"
};

Script "wdi_votelistinfo" (void) NET CLIENTSIDE
{

LOG(
s:"\n\n\cc--------------------------\n\cc--------------------------\n\cc--------------------------\n\crMurderer can call a vote right after he was chosen. \n\crInnocents have to wait 10 seconds after murderer was chosen to call a vote.\n\cc--------------------------\n\n\n\cgLIST OF MODIFIERS:\n\n",
s:"\ci1   ", s:voteindex[1], s:" \cf[MURD ONLY]\n   \ccEveryone receives a firearm, murderer can't go inside hidden walls.\n   \ccHowever, he get a x2 score in the end...If he managed to win that is.\n\n",
s:"\ci2   ", s:voteindex[2], s:" \cf[ALL / MURD+INNO]\n   \ccMap is slowly getting filled with random monsters, items and WTF effects.\n\n",
s:"\ci3   ", s:voteindex[3], s:" \cf[MURD+INNO]\n   \ccThis will unlock a hidden area in any EX map.\n   \ccIt'll make possible to unlock secret endings in advance.\n\n",
s:"\ci4   ", s:voteindex[4], s:" \cf[MURD+INNO]\n   \ccEveryone receives murderer items, but a true villain is still among players.\n\n",
s:"\ci5   ", s:voteindex[5], s:" \cf[MURD+INNO]\n   \ccWill abort current map and skip to that unfinished shitty aztec map\n\n",
s:"\ci6   ", s:voteindex[6], s:" \cf[MURD ONLY]\n   \ccWill let to call a non-murd votes next round,\n   \ccif players are told to wait more than 1 round for that.\n\n",
s:"\ci7   ", s:voteindex[7], s:" \cf[MURD+INNO]\n   \ccEveryone can be killed with one hit.\n   \ccGuess carefully.\n\n");

}



Script "VOTE_preparations" OPEN
{
if (GetLevelInfo(LEVELINFO_LEVELNUM)<40 || GetLevelInfo(LEVELINFO_LEVELNUM)>50)
{
SetCVAR("specialMvoted", FALSE);
SetCVAR("specialIvoted", FALSE);
SetCVAR("IsVoting", FALSE); 
endcam[6] = 10;
if (GetCVAR("canvoteagain")> 0) {SetCVAR("canvoteagain", GetCVAR("canvoteagain") -1);}
if (GetCVAR("canvoteagain")< 0) {SetCVAR("canvoteagain", 0);} // if it failcounts
}
while(!CheckActorInventory(TID_START+gameinfo[2], "MurdererKey"))
{
delay(35);
//printbold(i:endcam[6]);
}
while(endcam[6]> 0)
{
endcam[6]--;
delay(35);
//printbold(i:endcam[6]);
}
}


Script "VoteNowSFX" (void)  {LocalAmbientSound("VOTENOW", 96);}




// RETURN RESULT VALUES

//  TYPE CONDITIONS
//100 for all players, but if murd doesnt vote yes - abort vote
//99 all players votes are equal
//98 only murderer's vote count
//97 only innocent's votes count (very rare)

//  SECONDARY CONDITIONS
//96 murderer must not unpack his backpack to allow vote
//95 only for a certain map (use LEVELINFO_LEVELNUM)

//  CONDITIONS WHILE VOTE IS GOING ON
//96 murderer must not unpack his backpack to allow vote
//95 only for a certain map (use LEVELINFO_LEVELNUM)

Script "Vote" (int voteid) NET  //Restrictions script
{
str amend = StrParam(s:"VOTECASE",i:voteid);
int rere = 0;
rere = ACS_NAMEDEXECUTEWITHRESULT(amend, 0);
{ 
if (GetCVAR("VotingAllowed")==false) {Print(s:"Voting is disallowed."); terminate;}
else if ((GetLevelInfo(LEVELINFO_LEVELNUM)>=40) && (GetLevelInfo(LEVELINFO_LEVELNUM)<=50)) {Print(s:"Voting is allowed in WhoDunIt maps only."); terminate;}
else if (PlayerIsSpectator(PlayerNumber()) > 0) {Print(s:"Spectators cannot vote."); terminate;}
else if (gameinfo[1] != GAMESTATE_GAMEACTIVE) {Print(s:"The murderer has not been chosen yet."); terminate;}
else if (gameinfo[1] == GAMESTATE_GAMEOVER) {Print(s:"Game is over now."); terminate;}
else if (GetCVAR("IsVoting")== TRUE) {Print(s:"Someone's already called a vote."); terminate;}

//give a time for murd vote first
else if ((endcam[6] > 0) && (!CheckInventory("MurdererKey"))) {Print(s:"Innocents have to wait ", i:endcam[6], s:" seconds to call a vote"); terminate;}
else if ((rere == 100) && (GetCVAR("canvoteagain") < 1)) {}
else if ((rere == 99) && (GetCVAR("canvoteagain") < 1)) {}
else if ((rere == 98) && (GetCVAR("specialMvoted") == FALSE)) {}  
else if ((rere == 98) && (GetCVAR("specialMvoted") == TRUE)) {Print(s:"You can vote again for '", s:voteindex[voteid], s:"' in the next round."); terminate;} 
else if ((rere == 97) && (GetCVAR("specialIvoted") == FALSE)) {}  
else if ((rere == 97) && (GetCVAR("specialIvoted") == TRUE)) {Print(s:"You can vote again for '", s:voteindex[voteid], s:"' in the next round."); terminate;} 

else if (rere == 96) {Print(s:"Murderer has already unpacked his backpack.\n\nCan't vote for this modifier now.."); terminate;}
else if (rere == 95) {Print(s:"This map is not suitable for this modifier."); terminate;}
else if (rere == 1) {Print(s:"Conditions for this modifier are incorrect."); terminate;}
else if (GetCVAR("canvoteagain")>0) {Print(s:"You can vote again for '", s:voteindex[voteid], s:"' in ", i:GetCVAR("canvoteagain"), s:" rounds."); terminate;}
else if (voteid<=0) {Print(s:"\cktype \ciVOTE X\ck, where x is a number of modifier."); terminate;}

}
int numvoted = Playernumber();
if (rere == 0) {print(s:"Modifier ", i:voteid, s:" doesn't exist."); TERMINATE;}
int caseid = rere;
ACS_NAMEDEXECUTE("VoteExe", 0, voteid, numvoted, caseid);
}


/////////////////////////////////////////////////////////////////////////////////////////////////////



Script "VoteExe" (int voteid, int numvoted, int caseid)
{
//endcam[7] = repeat, 0 - no, 1 - yes
SetActivator(0, AAPTR_NULL);
str voter = "";
str initiated = "";
str modif = StrParam(s:"VOTECASE",i:voteid); 
str votername = StrParam(n:numvoted+1);
int minus = 0;
SetCVAR("IsVoting", TRUE); 
SetCVAR("VOTEYES", 0); SetCVAR("VOTENO", 0); 
ACS_NAMEDEXECUTE(modif, 0, 44); //check if script has a while voting conditions
switch(caseid)  //1st switch is to
 {
  case 100: //TwoRound   
	if (endcam[7] > 0) 
	{voter = "Murderer"; initiated = ", initiated by ";
    GiveActorInventory(TID_START+gameinfo[2], "GetPlayerInputVote", 1); GiveActorInventory(TID_START+gameinfo[2], "VoteNowSFX", 1);//murder vote first
	} 
	if (endcam[7] <= 0) 
	{voter = "Now innocents"; initiated = ", initiated by "; minus = 1;
	for(int l = 0; l < 32; l++) {if(!CheckActorInventory(TID_START+l, "MurdererKey")) GiveActorInventory(TID_START+l, "GetPlayerInputVote", 1);} //innocents vote second
	}
	break;
 case 99: //All Vote   
	for(int m = 0; m < 32; m++) {GiveActorInventory(TID_START+m, "GetPlayerInputVote", 1);} 
	voter = "Everyone"; initiated = ", initiated by ";
	break;
  case 98: //Murderer only  
    GiveActorInventory(TID_START+gameinfo[2], "GetPlayerInputVote", 1);  GiveActorInventory(TID_START+gameinfo[2], "VoteNowSFX", 1); 
	voter = "Murderer"; initiated = ""; votername = "";
	break;
  case 97: //Innocents only  
	for(int n = 0; n < 32; n++) {if (!CheckActorInventory(TID_START+n, "MurdererKey")) {GiveActorInventory(TID_START+n, "GetPlayerInputVote", 1);}}  
	voter = "Innocents";  initiated = ", initiated by ";
	break;
 }
int counter = 20;
while (counter > 0)
{
SetFont("smallfont");HudMessageBold (s:voter, s:"! \cg", i: counter, s:"\cr seconds left to vote for \cg", s:voteindex[voteid],  s:"\cr", s:initiated, s:votername ; HUDMSG_FADEOUT, 411, CR_DARKRED, 0.5, 0.02, 1.0, 1.0);
SetFont("smallfont");HudMessageBold (k:"+left", s:"\cr to vote YES";  HUDMSG_FADEOUT, 412, CR_RED, 0.3, 0.02 + 0.03, 1.0, 1.0);
SetFont("smallfont");HudMessageBold (k:"+right", s:"\cr to vote NO"; HUDMSG_FADEOUT, 413, CR_RED, 0.7, 0.02 + 0.03, 1.0, 1.0);
SetFont("BIGfont");HudMessageBold (i:GetCVAR("VOTEYES"); HUDMSG_FADEOUT, 414, CR_RED, 0.3, 0.02 + 0.06, 1.0, 1.0);
SetFont("BIGfont");HudMessageBold (i:GetCVAR("VOTENO"); HUDMSG_FADEOUT, 415, CR_RED, 0.7, 0.02 + 0.06, 1.0, 1.0);
if (endcam[7] > 0) { 
      if ((GetCVAR("VOTEYES") > GetCVAR("VOTENO"))||(GetCVAR("VOTEYES") < GetCVAR("VOTENO"))) {counter=0;}
	               } //if only one man has to vote, and he did, end it early
else if (endcam[7] <=0 ) 
                    { if (caseid == 98) 
                      { 
					  if ((GetCVAR("VOTEYES") > GetCVAR("VOTENO"))||(GetCVAR("VOTEYES") < GetCVAR("VOTENO"))) {counter=0;}
					  }
                    else  if ((GetCVAR("VOTEYES") > (playercount()- minus)/2) || (GetCVAR("VOTENO") > (playercount()- minus)/2) ||  ((GetCVAR("VOTEYES") + GetCVAR("VOTENO")) >= playercount() - minus )) {counter=0;}
	               }  //abort it early if large majority of players already called it over 
counter--;
delay(35);
}
ACS_NAMEDTERMINATE("GetPlayerInputVote", 0); //Stop voting input for everybody
{
  if (GetCVAR("VOTEYES") > GetCVAR("VOTENO"))     //VOTED YES
  {
    if (endcam[7] <= 0) //no next round vote
      {
	  ACS_NAMEDEXECUTE(modif, 0, 45); //check if script has YES ending vote conditions
	  delay(5);
      ACS_NAMEDEXECUTE(modif, 0, 1);  //calling main script
	  SetFont("smallfont");
      HudMessageBold(s:voteindex[voteid], s:"\cr applied for this round."; HUDMSG_FADEOUT, 411, CR_RED, 0.5, 0.02, 3.0, 1.0);  
      AmbientSound("SOULSARE", 127); 
      }
    else  // yes next round vote
      {
      SetFont("smallfont");HudMessageBold (s:voter, s:" has voted for it."; HUDMSG_FADEOUT, 411, CR_DARKRED, 0.5, 0.02, 3.0, 1.0);
      endcam[7] = 0; delay(35*4); restart;
      }
  }
  else   //VOTED NO
  {
  SetFont("smallfont");
  HudMessageBold(s:voteindex[voteid], s:"\cr has been called off"; HUDMSG_FADEOUT, 411, CR_RED, 0.5, 0.02, 2.0, 1.0); 
  ACS_NAMEDEXECUTE(modif, 0, 46); //check if script has NO ending vote conditions
  }
}
//FINISHING VOTE
endcam[7] = 0;
SetCVAR("VOTEYES", 0); SetCVAR("VOTENO", 0);
SetCVAR("IsVoting", FALSE); 
switch(caseid)
  {
  case 100: SetCVAR("canvoteagain", playercount()/2); break;
  case 99: SetCVAR("canvoteagain", playercount()/2); break;
  case 98: SetCVAR("specialMvoted", TRUE); break;
  case 97: SetCVAR("specialIvoted", TRUE); break;
  }
}






script "GetPlayerInputVote" (void) 
{
int buttonzz;
 while(TRUE)
 {
 buttonzz = GetPlayerInput(-1, INPUT_BUTTONS);
     if (buttonzz & BT_LEFT)   {SetCVAR("VOTEYES", GetCVAR("VOTEYES")+1); TERMINATE;}   
else if (buttonzz & BT_RIGHT)   {SetCVAR("VOTENO", GetCVAR("VOTENO")+1);  TERMINATE;}
delay(1);
}
}

script "WDISHOWSCORESINFO" ENTER CLIENTSIDE
{
int buttonzz;
 while(GetLevelInfo(LEVELINFO_LEVELNUM)<40 || GetLevelInfo(LEVELINFO_LEVELNUM)>50)
 {
 buttonzz = GetPlayerInput(-1, INPUT_BUTTONS);
   if ((buttonzz & BT_SHOWSCORES) && (PlayerIsSpectator(ConsolePlayerNumber())==0))
   {
   SetHUDSize(1024, 768, 0);
   SetFont("smallfont");
   HudMessage(s:"Type in console: \cgghosted 1 \crto always see ghosts. \cgghosted 0 \crto never see ghosts again. \n\crTo vote special, type in console: \cgPUKENAME VOTE X\cr, where x is a number of gameplay modifier to vote for.\n\crType in console: \cgvotelist\cr, to see a list of gameplay modifiers."; HUDMSG_PLAIN, 2171, CR_DARKRED, 512.0, 640.0, 0.05);
 }   
delay(1);
}
}



//////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////  
//////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
//////////////////////////////////////////////////////
////////////////////////////////////////////////////
//////////////////////////////////////////////////
////////////////////////////////////////////////
//////////////////////////////////////////////
////////////////////////////////////////////
//////////////////////////////////////////
////////////////////////////////////////
//////////////////////////////////////
////////////////////////////////////
//////////////////////////////////
////////////////////////////////
//////////////////////////////                MODIFIERS
////////////////////////////
//////////////////////////
////////////////////////
//////////////////////
////////////////////
//////////////////
////////////////
//////////////
////////////
//////////
////////
//////
////
//
Script "VOTECASE0" (void)  {}



Script "WHILEVOTING1" (void)
{
SetActivator(0, AAPTR_NULL);
while(TRUE)
{
GiveActorInventory(TID_START+gameinfo[2], "BlockEvenMurd", 1);
Wdi_Setinvulnerable(TRUE);
delay(5);
}
}


Script "KEEPMURDOFFWALLS" (void)
{
SetActivator(0, AAPTR_NULL);
while(CheckActorInventory(TID_START+gameinfo[2],"MurdBackpack"))
{
GiveActorInventory(TID_START+gameinfo[2], "BlockEvenMurd", 1);
Wdi_Setinvulnerable(TRUE);
delay(2);
}
delay(2);
GiveActorInventory(TID_START+gameinfo[2], "BlockEvenMurd", 1);
Wdi_Setinvulnerable(FALSE);
}

Script "VOTECASE1" (int add) // NIGHTMARE MODE FOR MURDERER 1 ZEBERPAL + DEA
{
SetActivator(0, AAPTR_NULL);

if (add == 44) {ACS_NAMEDEXECUTE("WHILEVOTING1", 0); terminate;}
if (add == 45) {ACS_NAMEDTERMINATE("WHILEVOTING1", 0); ACS_NAMEDEXECUTE("KEEPMURDOFFWALLS", 0);TERMINATE;}
if (add == 46) {ACS_NAMEDTERMINATE("WHILEVOTING1", 0); delay(3); GiveActorInventory(TID_START+gameinfo[2],"MurderDoorUnblocker", 1); Wdi_Setinvulnerable(FALSE); terminate;}

if (!CheckActorInventory(TID_START+gameinfo[2],"MurdBackpack")) { SetResultValue(96); terminate;}  //murderer has unpacked his backpack, aborting
//Wdi_Setinvulnerable(TRUE); //while voting all players in godmode.
endcam[7] = 0; SetResultValue(98); //98 only murderer decides (for heavy gameplay changes cases)
if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
delay(35*3);
GiveActorInventory(TID_START+gameinfo[2], "WDINMARER", 1);
int counter = 0;
int ammocnt = 0;
int rand = 0;

delay(35);
Wdi_Setinvulnerable(FALSE);
endcam[0] = 1; //will multiply the score
GiveActorInventory(TID_START+gameinfo[2], "BlockEvenMurd", 1); //blocks murd from walls
delay(5);

while(counter < 31)
{
rand = random(17,18);
SpawnSpotForced(buywep[rand], TID_START+counter, 0, 0);
if (rand == 17) {SpawnSpotForced("NewShell", TID_START+counter, 0, 0);
               SpawnSpotForced("NewShell", TID_START+counter, 0, 0); 
			   SpawnSpotForced("NewShell", TID_START+counter, 0, 0); 
			   SpawnSpotForced("NewShell", TID_START+counter, 0, 0); 
			   SpawnSpotForced("NewShell", TID_START+counter, 0, 0); 
			   SpawnSpotForced("NewShell", TID_START+counter, 0, 0); 
			   SpawnSpotForced("NewShell", TID_START+counter, 0, 0); 
			   SpawnSpotForced("NewShell", TID_START+counter, 0, 0); }
if (rand == 18) {SpawnSpotForced("PistolClip", TID_START+counter, 0, 0);
               SpawnSpotForced("PistolClip", TID_START+counter, 0, 0);}
GiveActorInventory(TID_START+counter, buyAmmotype[rand], 10);              
GiveActorInventory(TID_START+counter, "Stimpack", 2);
counter++;
delay(1); 
}
delay(35);
while(gameinfo[1] == GAMESTATE_GAMEACTIVE)
{
delay(3);
}
if (playinfo[4] == END_MURLOSE) {terminate;}
if (playinfo[4] == END_MURSUICIDE) {terminate;}
if (playinfo[4] == END_INOLOSE) 
{
delay(35*3);
SetHUDSize(1024, 768, 0);
setfont("BIGFONT");
HudMessageBold (n:gameinfo[2]+1, s:" MANAGED TO WIN THE GAME ON NIGHTMARE DIFFICULTY!"; HUDMSG_FADEOUT, 411, CR_GREY, 512.0, 384.0, 4.0, 1.0);

//if ((GetCvar("SeasonOnHold") == false) && (getcvar("RoundsLeft")>1) && (PlayerCount() >= 4)) 
  //{
  //SetCvar((strParam(s:"wdi_TopMurdererScore",i:wdimdiadd[16], s:"score")), (GetCVAR(strParam(s:"wdi_TopMurderer",i:wdimdiadd[16], s:"score")))*2);//) >> 16); //bonus record
  //}

}
//////////////////////////////////your stuff ends here
}




Script "WDINMARER" (void) CLIENTSIDE// NIGHTMARE MODE FOR MURDERER
{
   LocalAmbientSound("YZLAUGHA", 127);
   SetHUDSize(640, 480, 0);
   SetFont("M_NMARE");
   HudMessage(s:"A"; HUDMSG_FADEOUT, 0,CR_DARKRED, 320.0, 240.0, 5.0, 2.0 );
}




// CRAZY MODE 2

str bullshitems[20] = {
"WDI18bombdropped", //0
"SmokeCanister",
"ShotgunTrap",
"WDI18bombdropped",
"DeployingStimGas",
"PoliceLight",
"Trite",
"StealthCamouflage",
"Doom3Imp",
"COOP_Zombie_with_axe",
"PoliceRaider", //10
"BoltSpawner",
"SwampSnake",
"fireworksLighting",
"BearTrapy",
"SmokeCanister",
"ChainsawZombie",
"Fish1",
"Trite",
"ZHAPlatformSpawner"
};

Script "VOTECASE2" (int add) // BULLSHITEMS 2
{
SetActivator(0, AAPTR_NULL);
if (add == 44) {terminate;}
if (add == 45) {terminate;}
if (add == 46) {terminate;}
{
if ((GetCvar("SeasonOnHold") == false) && (getcvar("RoundsLeft")>1) && (PlayerCount() >= 4)) {endcam[7] = 1; SetResultValue(100); }
else {endcam[7] = 0; SetResultValue(99);}
}
if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
delay(35*3);
while(playercount() > 0)
{
SpawnSpotForced(bullshitems[random(0, 19)], GetCvar("Specspot"), 0, random(1,254));
delay(35*random(5,10));
}
//////////////////////////////////your stuff ends here
}




Script "VOTECASE3" (int add) // ENDINGS ACTIVATE IN EX MAPS
{
SetActivator(0, AAPTR_NULL);
if (add == 44) {terminate;}
if (add == 45) {terminate;}
if (add == 46) {terminate;}
if (GetLevelInfo(LEVELINFO_LEVELNUM)<31 || GetLevelInfo(LEVELINFO_LEVELNUM)>33) { SetResultValue(95); terminate;} //map is wrong
 
endcam[7] = 1; SetResultValue(100); //100 murderer decides first, then innocents do (for certain changes cases)
if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
delay(35*3);
if (GetLevelInfo(LEVELINFO_LEVELNUM)==31) {ACS_ExecuteAlways(44,0); terminate;}
if (GetLevelInfo(LEVELINFO_LEVELNUM)==32) 
{ACS_ExecuteAlways(44,0); 
        Delay(1);
		SetLineBlocking(4, BLOCK_NOTHING); //stufff
		SetLineBlocking(142, BLOCK_NOTHING);
		SetLineTexture(142, SIDE_FRONT, TEXTURE_MIDDLE, "-");
		SetLineTexture(7, SIDE_FRONT, TEXTURE_MIDDLE, "XLIGHT-X");
		SetLineTexture(7, SIDE_BACK, TEXTURE_MIDDLE, "XLIGHT-X");
		TranslucentLine(7, 190, 1);
		SetLineBlocking(31, BLOCK_NOTHING);
		SetLineTexture(31, SIDE_FRONT, TEXTURE_MIDDLE, "-");
		SetLineTexture(47, SIDE_FRONT, TEXTURE_MIDDLE, "XCTX240");
		SetLineSpecial (4, ACS_Execute, 51);
		SetLineSpecial (31, ACS_Execute, 101);
		SetLineSpecial (33, ACS_Execute, 63);
		SetMusic(Random("B3OZ1L5Q", "E9H4VZ3A"));
		//ACS_Execute(811,0);
		SpawnSpot("GluttonousRat", 184, 0, 0);
		Delay(1); terminate;}
if (GetLevelInfo(LEVELINFO_LEVELNUM)==33) 
{
switch(random(1,2))
{
case 1:
SetLineSpecial(51, ACS_Execute, 357);
ACS_EXECUTE(811,0);
ACS_EXECUTE(812,0);
break;
case 2:
ACS_EXECUTE(566,0);
break;
}
}		
//////////////////////////////////your stuff ends here
}



Script "VOTECASE4" (int add) // (everyone is a murd) 4
{
SetActivator(0, AAPTR_NULL);
if (add == 44) {terminate;}
if (add == 45) {terminate;}
if (add == 46) {terminate;}

endcam[7] = 1; SetResultValue(100); //100 murderer decides first, then innocents do (for certain changes cases)
if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
delay(35*3);
for(int l = 0; l < 32; l++)
{if(!CheckActorInventory(TID_START+l, "MurdererKey"))
{
GiveActorInventory(TID_START+l, "MurderKnife", 1);
GiveActorInventory(TID_START+l, "ChlorineGas", 1); // Poison Gas x1
GiveActorInventory(TID_START+l,"TripShotgun", 2); // TripWire Shotguns x2
GiveActorInventory(TID_START+l,"SmokeBomb", 2); // Smoke Bombs x2
GiveActorInventory(TID_START+l,"RemoteCamera", 1); // Remote Camera x1
GiveActorInventory(TID_START+l,"FakeStim", 3); // Fake Stimpack x3
GiveActorInventory(TID_START+l,"SoundEmitter", 4); // Sound Emitters x4
}
} 
//////////////////////////////////your stuff ends here
}

Script "VOTECASE5" (int add) // will skip to a secret map
{
SetActivator(0, AAPTR_NULL);
if (add == 44) {terminate;}
if (add == 45) {terminate;}
if (add == 46) {terminate;}

endcam[7] = 1; SetResultValue(100); //100 murderer decides first, then innocents do (for certain changes cases)
if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
delay(35*3);
consolecommand("changemap wdiexsec");
//////////////////////////////////your stuff ends here
}

Script "VOTECASE6" (int add) // vote in advance
{
SetActivator(0, AAPTR_NULL);
if (add == 44) {terminate;}
if (add == 45) {terminate;}
if (add == 46) {terminate;}

if (GetCVAR("canvoteagain") < 2) {SetResultValue(1); TERMINATE;}

endcam[7] = 0; SetResultValue(98); //98 only murderer decides 
if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
delay(35);
SetCvar("canvoteagain", 1);
//////////////////////////////////your stuff ends here
}
/*
function void hudmessageonactorB(int tid, int range, str sprite, str text, int id)
{
	int dist, ang, vang, pitch, xx, yy;
	int HUDX = 1280;
	int HUDY = 960;
	int offset = 0;

	if(sprite != -1)
	{
		SetFont(sprite);
		text = "A";
		offset = 0.1;
	}

	SetHUDSize(HUDX, HUDY, 1);
	xx = GetActorX(tid) - GetActorX(0);
	yy = GetActorY(tid) - GetActorY(0);

	vang = VectorAngle(xx,yy);
	ang = (vang - GetActorAngle(0) + 1.0) % 1.0;

	if(((vang+0.125)%0.5) > 0.25) dist = FixedDiv(yy, Sin(vang));
	else dist = FixedDiv(xx, Cos(vang));

	if ((ang < 0.2 || ang > 0.8) && dist < range)
	{
		pitch = VectorAngle(dist, GetActorZ(tid) - (GetActorZ(0) + 41.0));
		pitch = (pitch + GetActorPitch(0) + 1.0) % 1.0;

		xx = HUDX/2 - ((HUDX/2) * Sin(ang) / Cos(ang));
		yy = HUDY/2 - ((HUDX/2) * Sin(pitch) / Cos(pitch));

		if(sprite != -1)
		SetFont(sprite);
		HudMessage(s:text; HUDMSG_PLAIN, id, CR_UNTRANSLATED, (xx<<16)+offset, ((yy<<16)+offset)-32.0, 0.1);
	}
	else
	HudMessage(s:" "; HUDMSG_PLAIN, id, CR_UNTRANSLATED, 0, 0, 0.1);
}


function void seek_names (void)
{
    for(int m = 0; m < 32; m++)
    {
        HudMessageOnActorB(TID_START+m, 16000.0,-1,StrParam(n:m + 1),4200+m); 
    }
}

script "seek_nnames" (void) clientside 
{
if (!Client_action()) { terminate;}
	while(WDI_GameState() == GAMESTATE_GAMEACTIVE)
	{
		seek_names();
		Delay(1);		
	}
}
*/

Script "VOTECASE7" (int add) // blind mode
{
SetActivator(0, AAPTR_NULL);
if (add == 44) {terminate;}
if (add == 45) {terminate;}
if (add == 46) {terminate;}

endcam[7] = 1; SetResultValue(100); //98 only murderer decides 
if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
delay(35*3);

while(gameinfo[1] == GAMESTATE_GAMEACTIVE)
{
for(int k = 0; k < 32; k++) {SetActorProperty(TID_START+k, APROP_DamageFactor, 50.0);}
delay(35);
}
//////////////////////////////////your stuff ends here
}
