#library "wdivote"
#include "zcommon.acs" 
//#include "p_penalties.acs"   
#import "redrum.acs"
#import "classic.acs"
#import "mdistuff.acs"

/*
/////////////////////////////////////////
////////////////////////////////////////
///////////////////// WDI VOTING by Zeberpal
/////////////////////////////////////////
////////////////////////////////////////
*/


int WdiVote[13]; 
/*
0
1 - Vote Yes
2 - Vote No
3 - Spec vote Yes
4- Spec Vote no
5 - Game + Spec YES
6 - Game + Spec NO
7 - specialMvoted
8 - specialIvoted
9 -  mdi voted
10 - repeat (for two-round vote)
11 - canvoteagain
12 - number of current vote
*/
str voteindex[10] =
{
"NOTHING",
"NIGHTMARE DIFFICULTY FOR MURDERER",
"CRAZY MODE",
"EX MAP: UNLOCK A SECRET (FOR HIDDEN ENDINGS)",
"EVERYONE DUN IT",
"RESSURECT LIZA",
"ABLE TO CALL ANY VOTE NEXT ROUND",
"ONE HIT KILL",
"ALLOW 'ABILITIES MODE' & 'THE MUTILATOR' MAPS",
"SERVER SPECIAL"
};



Script "wdi_votelistinfo" (void) NET CLIENTSIDE
{
LOG(
s:"\n\n\cc--------------------------\n\cc--------------------------\n\cc--------------------------\n\crMurderer can call a vote right after he was chosen. \n\crInnocents have to wait 10 seconds after murderer was chosen to call a vote.\n\cc--------------------------\n\n\n\cgLIST OF MODIFIERS:\n\n",
s:"\ci1   ", s:voteindex[1], s:" \cf[MURD ONLY]\n   \ccEveryone receives a firearm, murderer can't go inside hidden walls.\n   \ccHowever, final score is multiplied by 1,75...If he managed to win that is.\n\n",
s:"\ci2   ", s:voteindex[2], s:" \cf[ALL / MURD+INNO]\n   \ccMap is slowly getting filled with random monsters, items and WTF effects.\n\n",
s:"\ci3   ", s:voteindex[3], s:" \cf[MURD+INNO]\n   \ccThis will unlock a hidden area in any EX map.\n   \ccIt'll make possible to unlock secret endings in advance.\n\n",
s:"\ci4   ", s:voteindex[4], s:" \cf[MURD+INNO]\n   \ccEveryone receives murderer items, but a true villain is still among players.\n\n",
s:"\ci5   ", s:voteindex[5], s:" \cf[ALL]\n   \ccRessurect Lina's twin sister from the dead\n\n",
s:"\ci6   ", s:voteindex[6], s:" \cf[MURD ONLY]\n   \ccWill let to call a non-murd votes next round,\n   \ccif players are told to wait more than 1 round for that.\n\n",
s:"\ci7   ", s:voteindex[7], s:" \cf[MURD+INNO]\n   \ccEveryone can be killed with one hit.\n   \ccGuess carefully.\n\n",
s:"\ci8   ", s:voteindex[8], s:" \cf[ALL]\n   \ccAllows to play 'The Mutilator' mod\n   \ccand additional abilities in WhoDunIt.\n   \ccThis vote is called by the game/server only.\n\n",
s:"\ci9   ", s:voteindex[9], s:" \cf[SERVER]\n   \ccAn admin can use this option to poll.\n   \ccSet WdiServersVote <...> to set a question.\n   \ccCurrent vote option is '", s:GetCvarString("WdiServersVote"),s:"'\n\n");
}


Script "VOTE_preparations" OPEN
{
if (MUTILATOR_MOD() == 0)
{
SetCVAR("WdiIsVoting", 0); 
endcam[6] = 10;
if (WdiVote[11]> 0) WdiVote[11]--;
if (WdiVote[11]< 0) WdiVote[11] = 0; // if it failcounts
}
while(!CheckActorInventory(TID_START+gameinfo[2], "MurdererKey"))
{
delay(35);
//printbold(i:endcam[6]);
}
while(endcam[6]> 0)
{
endcam[6]--;
delay(35);
//printbold(i:endcam[6]);
}
}






// RETURN RESULT VALUES

//  TYPE CONDITIONS
//100 for all players, but if murd doesnt vote yes - abort vote
//99 all players votes are equal
//98 only murderer's vote count
//97 only innocent's votes count (very rare)

//  SECONDARY CONDITIONS
//96 murderer must not unpack his backpack to allow vote
//95 only for a certain map (use LEVELINFO_LEVELNUM)

//  CONDITIONS WHILE VOTE IS GOING ON
//96 murderer must not unpack his backpack to allow vote
//95 only for a certain map (use LEVELINFO_LEVELNUM)

Script "Vote" (int voteid) NET  //Restrictions script
{
int numvoted = Playernumber();
str amend = StrParam(s:"VOTECASE",i:voteid);
int rere = 0;

//personal restrictions
if ((voteid == 6) && (!checkInventory("Murdererkey"))) {Print(s:"Only the Murderer can call this vote!"); terminate;}
if ((voteid == 1) && (GetLevelInfo(LEVELINFO_LEVELNUM) == 32)) {Print(s:"Nightmare difficulty is not allowed in this map!"); terminate;}

rere = ACS_NAMEDEXECUTEWITHRESULT(amend, 0);
{ 
if (GetCVAR("WDIVotingAllowed")==false) {Print(s:"Voting is disallowed."); terminate;}
else if (MUTILATOR_MOD() > 0) {Print(s:"Voting is allowed in WhoDunIt maps only."); terminate;}
else if (PlayerIsSpectator(PlayerNumber()) > 0) {Print(s:"Spectators cannot vote."); terminate;}
else if (gameinfo[1] != GAMESTATE_GAMEACTIVE) {Print(s:"The murderer has not been chosen yet."); terminate;}
else if (gameinfo[1] == GAMESTATE_GAMEOVER) {Print(s:"Game is over now."); terminate;}
else if (GetCVAR("WdiIsVoting") > 0) {Print(s:"Someone's already called a vote."); terminate;}


//MDISPECIAL

else if ((voteid == 8))
       {
/*	   if (MDIGlobal[1] > 0) {Print(s:"Can vote to Allow/Disallow 'The Mutilator' in ", i: MDIGlobal[1], s:" rounds"); Terminate;}
	   if (WdiVote[9] == true) {Print(s:"The Mutilator vote has already been just now."); Terminate;}
*/
       Print(s:"This vote is called by the server."); Terminate;
	   }
	   
else if ((voteid == 9))
       {
	   if (numvoted > -1) {Print(s:"Only the server can call this vote"); Terminate;}
	   }
if ((voteid == 5) && (MDIGlobal[11] < 20)) {Print(s:"Ressurect as Liza's ghost ", i:20 - MDIGlobal[11], s:" times to bring her true self back into this world!"); terminate;}
//give a time for murd vote first
else if ((endcam[6] > 0) && (!CheckInventory("MurdererKey"))) {Print(s:"Innocents have to wait ", i:endcam[6], s:" seconds to call a vote"); terminate;}
else if ((rere == 100) && (WdiVote[11] < 1)) {}
else if ((rere == 99) && (WdiVote[11] < 1)) {}
else if ((rere == 98) && (WdiVote[7] == 0)) {}  
else if ((rere == 98) && (WdiVote[7] == 1)) {Print(s:"You can vote again for '", s:voteindex[voteid], s:"' in the next round."); terminate;} 
else if ((rere == 97) && (WdiVote[8] == 0)) {}  
else if ((rere == 97) && (WdiVote[8] == 1)) {Print(s:"You can vote again for '", s:voteindex[voteid], s:"' in the next round."); terminate;} 

else if (rere == 96) {Print(s:"Murderer has already unpacked his backpack.\n\nCan't vote for this modifier now.."); terminate;}
else if (rere == 95) {Print(s:"This map is not suitable for this modifier."); terminate;}
else if (rere == 94) {Print(s:"Not enough players for this modifier."); terminate;}
else if (rere == 93) {Print(s:"Get 500 MURDERER PTS first to unlock Nightmare Difficulty!"); terminate;}
/*else if ((rere == 92) && (voteid != 8))
       {
	   if (MDIGlobal[8] > 0) {Print(s:"Can vote this particular option in ", i: MDIGlobal[8], s:" rounds"); Terminate;}
	   //if (pollvoted == true) {Print(s:"There already was a similiar vote"); Terminate;}
	   }*/
else if (rere == 1) {Print(s:"Conditions for this modifier are incorrect."); terminate;}
else if (WdiVote[11]>0) {Print(s:"You can vote again for '", s:voteindex[voteid], s:"' in ", i:WdiVote[11], s:" rounds."); terminate;}
else if (voteid<=0) {Print(s:"\cktype \ciVOTE X\ck, where x is a number of modifier."); terminate;}

}
if (rere == 0) {print(s:"Modifier ", i:voteid, s:" doesn't exist."); TERMINATE;}
int caseid = rere;
ACS_NAMEDEXECUTE("VoteExe", 0, voteid, numvoted, caseid);
}


/////////////////////////////////////////////////////////////////////////////////////////////////////


Script "VoteExe" (int voteid, int numvoted, int caseid)
{
log(s:"VOTE:     ",s:voteindex[voteid]);
SetActivator(0, AAPTR_NULL);
str voter = "";
str initiated = "";
str modif = StrParam(s:"VOTECASE",i:voteid); 
str votername = StrParam(n:numvoted+1);
int minus = 0;
if (numvoted == 99) votername = "server";
if (voteid == 9) voteindex[voteid] = getcvarstring("WdiServersVote");
//SetCVAR("IsVoting", TRUE); 

for(int l = 1; l < 7; l++) WdiVote[l] = 0;
ACS_NAMEDEXECUTE(modif, 0, 44); //check if script has a while voting conditions
switch(caseid)  //1st switch is to
 {
  case 100: //TwoRound   
	if (WdiVote[10] == 1) 
	{
	voter = "Murderer"; initiated = ", initiated by ";
	SetCVAR("WdiIsVoting", 3); 
	} 
	if (WdiVote[10] == 0) 
	{
	voter = "Now innocents"; initiated = ", initiated by "; minus = 1;
	SetCVAR("WdiIsVoting", 2); 
	}
	break;
 case 99: //All Vote   
	voter = "Everyone ingame"; initiated = ", initiated by ";
	SetCVAR("WdiIsVoting", 1); 
	break;
  case 98: //Murderer only  
	voter = "Murderer"; initiated = ""; votername = "";
	SetCVAR("WdiIsVoting", 3); 
	break;
  case 97: //Innocents only  
	voter = "Innocents";  initiated = ", initiated by ";
	SetCVAR("WdiIsVoting", 2); 
	break;
  case 92:  //Everybody on the server on the server, with no early result(wait till end) 
	voter = "Players and Spectators"; initiated = ", initiated by ";
	SetCVAR("WdiIsVoting", 4); 
	break;
 }
int counter = 20;
WdiVote[12] = voteid;
while (counter > 0)
{
WdiVote[5] = Int2Fix(WdiVote[1]) + FixedDiv(Int2Fix(WdiVote[3]), Int2Fix(2));
WdiVote[6]  = Int2Fix(WdiVote[2]) + FixedDiv(Int2Fix(WdiVote[4]), Int2Fix(2));
SetFont("smallfont");
HudMessageBold (s:voter, s:"! \cg", i: counter, s:"\cr seconds left to vote for \cg", s:voteindex[voteid],  s:"\cr", s:initiated, s:votername; HUDMSG_FADEOUT, 411, CR_DARKRED, 0.5, 0.02, 1.0, 1.0);
SetFont("BIGfont");HudMessageBold (f:WdiVote[5]; HUDMSG_FADEOUT, 414, CR_RED, 0.3, 0.02 + 0.09, 1.0, 1.0);
SetFont("BIGfont");HudMessageBold (f:WdiVote[6] ; HUDMSG_FADEOUT, 415, CR_RED, 0.7, 0.02 + 0.09, 1.0, 1.0);
if (WdiVote[10] == 1) { 
      if ((WdiVote[1] > WdiVote[2])||(WdiVote[1] < WdiVote[2])) {counter=0;}
	               } //if only one man has to vote, and he did, end it early
else if (WdiVote[10] == 0) 
                    { if (GetCVAR("WdiIsVoting") == 3)  
                      { 
					  if ((WdiVote[1] > WdiVote[2])||(WdiVote[1] < WdiVote[2])) counter=0;
					  }
			     else if (GetCVAR("WdiIsVoting") == 4) 
                      { 
					  //Wait till the time expires
					  }
                    else  
					   {
					   if ((WdiVote[1] > (playercount()- minus)/2) || (WdiVote[2] > (playercount()- minus)/2) ||  ((WdiVote[1] + WdiVote[2]) >= playercount() - minus )) counter=0;
                       //abort it early if large majority of players already called for either
					   }
	               }  
counter--;
delay(35);
}

{
  if (WdiVote[5] > WdiVote[6])     //VOTED YES
  {
    if (WdiVote[10] == 0) //no next round vote
      {
	  ACS_NAMEDEXECUTE(modif, 0, 45); //check if script has YES ending vote conditions
	  delay(5);
      ACS_NAMEDEXECUTE(modif, 0, 1);  //calling main script
	  SetFont("smallfont");
      HudMessageBold(s:voteindex[voteid], s:"\cr applied."; HUDMSG_FADEOUT, 411, CR_RED, 0.5, 0.02, 3.0, 1.0);  
      AmbientSound("SOULSARE", 127); 
	  WdiVote[12] = 0;
      }
    else  // yes next round vote
      {
      SetFont("smallfont");HudMessageBold (s:voter, s:" has voted for it."; HUDMSG_FADEOUT, 411, CR_DARKRED, 0.5, 0.02, 3.0, 1.0);
      WdiVote[10] = 0; delay(35*4); restart;
      }
  }
  else   //VOTED NO
  {
  SetFont("smallfont");
  HudMessageBold(s:voteindex[voteid], s:"\cr has been called off"; HUDMSG_FADEOUT, 411, CR_RED, 0.5, 0.02, 2.0, 1.0); 
  ACS_NAMEDEXECUTE(modif, 0, 46); //check if script has NO ending vote conditions
  WdiVote[12] = 0;
  }
}
//FINISHING VOTE
WdiVote[10] = 0;
for(int m = 1; m < 7; m++) WdiVote[m] = 0;
SetCVAR("WdiIsVoting", 0);

switch(caseid)
  {
  case 100: WdiVote[11] = playercount()/2; break;
  case 99: WdiVote[11] = playercount()/2; break;
  case 98: WdiVote[7] = 1; break;
  case 97: WdiVote[8] = 1; break;
  case 92: break;
  }
}





Script "WDI_Voted"  (int password, int Option, int VotePlaya) NET {if (MDI_PassMatch(password))   
{
str result;
WdiVote[Option + VotePlaya]++;
Switch(Option + VotePlaya)  {  CASE 1: Result = "YES"; break;    CASE 2: Result = "NO"; break;    CASE 3: Result = "YES(spec)"; break;    CASE 4: Result = "NO(spec)"; break;  }
Log(n:PlayerNumber() + 1, s:" voted ", s:Result);
}
}


script "WDICLIENTSTUFF" OPEN CLIENTSIDE
{
SetActivatorToPlayer(ConsolePlayerNumber());
int madmeter;
int ticsec;
int secpass;
int tensec = 10;

int carrytypeA;
int carrytypeB;
int carrytypeC;
int carrytypeD;
int carrytypeE;
int CarryPcntA;
int CarryPcntB;
int CarryPcntC;
int CarryPcntD;
int CarryPcntE;
int carryammount;
int carrypercent;
int Carryscore;

bool murdswitch;
int equipscore;
int Option; 
int VotePlaya; //VotePlaya 0 - ingame players, 2 - spectator
int buttonzz;
int password;
str pressyes;
str pressno;
bool voted;
bool canvote;
bool votenowsfx;
//Murd Markers
int halfWidth, halfHeight;
int imageX, imageY;

int markang, markpch;
//  int viewHeight;

int wX, wY, wZ;
int rX, rY;
int DrawY;
int height;
int ppl;
int boxradius = 2500;


 while(MUTILATOR_MOD() == 0)
 {
 password = GetCvar("mdispecial1") * PlayerCount() - GetCvar("mdispecial6"); 
 buttonzz = GetPlayerInput(-1, INPUT_BUTTONS);

   //information
   if (buttonzz & BT_SHOWSCORES)
   {
   SetHUDSize(1024, 768, 0);
   SetFont("smallfont");
   HudMessage(s:"Type in console \ccinformation \cuto see the game rules and various help info"; HUDMSG_PLAIN, 2171, CR_DARKGREY, 512.0, 640.0, 0.05);
   }  
   //madmeter
   if(CheckInventory("MurdererKey") && (CheckInventory("MadMeter") < 35))
       {
	   if (madmeter < 35) madmeter++;
	   else {madmeter = 0; LocalAmbientSound("WDIAMADM", 96);}
	   }
   
   
   
/////////////////////////////////// VOTING
///////////////////////////////////
///////////////////////////////////

   if (GetCvar("WdiIsVoting") > 0) 
   {
     if(voted == false)
	   {
        if ((PlayerIsSpectator(ConsolePlayerNumber()) == 0) || (PlayerIsSpectator(ConsolePlayerNumber()) == 2))
		   {
		     if (GetCvar("WdiIsVoting") == 1)  canvote = true; //all players in game
        else if (GetCvar("WdiIsVoting") == 2)  {if(!CheckInventory("MurdererKey")) canvote = true; else canvote = false;}  //all innocents
		else if (GetCvar("WdiIsVoting") == 3)  {if( CheckInventory("MurdererKey")) canvote = true; else canvote = false;}   //only murd              
		else if (GetCvar("WdiIsVoting") == 4)  {canvote = true; VotePlaya = 0;}   //whole server	
		   }
        if (PlayerIsSpectator(ConsolePlayerNumber()) == 1)
		   {
		     if (GetCvar("WdiIsVoting") == 1)  canvote = false; //all players in game
        else if (GetCvar("WdiIsVoting") == 2)  canvote = false;   //all innocents
		else if (GetCvar("WdiIsVoting") == 3)  canvote = false;   //only murd              
		else if (GetCvar("WdiIsVoting") == 4)  {canvote = true; VotePlaya = 2;}//whole server	
		   }
		   
		if (canvote == true)
		      {
			  if(votenowsfx == false) {LocalAmbientSound("VOTENOW", 96); votenowsfx = true;}
			  pressyes = strparam(k:"+speed", s:"  +  ", k:"+forward", s:"\n     +     \n", k:"+use", s:"\cr        to vote YES");
			  pressno = strparam(k:"+speed", s:"  +  ", k:"+back", s:"\n     +     \n", k:"+use", s:"\cr        to vote NO");
			       if (buttonzz & BT_SPEED && buttonzz & BT_FORWARD && buttonzz & BT_USE) { NamedRequestScriptPuke("WDI_Voted", password, 1, VotePlaya); voted = true;} 
              else if (buttonzz & BT_SPEED && buttonzz & BT_BACK && buttonzz & BT_USE) { NamedRequestScriptPuke("WDI_Voted",  password, 2, VotePlaya); voted = true;}
		      }   

			  		
	   }
	   if((voted == true)|(canvote == false))
	   {
	   pressyes = strparam(s:"\crvoted YES");
       pressno = strparam(s:"\crvoted NO");
	   }

			  
		   	  SetHUDSize(0, 0, 0);
              SetFont("smallfont");HudMessage (s:pressyes;  HUDMSG_FADEOUT, 412, CR_RED, 0.3, 0.02 + 0.03, 1.0, 1.0);
              SetFont("smallfont");HudMessage (s:pressno;   HUDMSG_FADEOUT, 413, CR_RED, 0.7, 0.02 + 0.03, 1.0, 1.0);

   }
   
else if (GetCvar("WdiIsVoting") == 0)    
   {
   VotePlaya = 0;
   canvote = false;
   voted = false;
   votenowsfx = false;
   }


if (PlayerIsSpectator(ConsolePlayerNumber()) == 0)
{
 
if (ticsec < 35) ticsec++;
else 
{
secpass++; 
ticsec = 0;

{ 
if (tensec > 0) tensec--;
else {tensec = 5; NamedRequestScriptPuke("WDI_PlayaScore", password, Carryscore);}
}  
  
If (!CheckInventory("MurdererKey"))  //if innocent
  {
if (CheckInventory("Slot1Filled")<=0) 
carrytypeA ++;  

else if (CheckInventory("Plank")|CheckInventory("Molotov")|CheckInventory("Brick")) 
carrytypeB ++; 

else if (CheckInventory("NailedPlank")|CheckInventory("BaseballBat")|CheckInventory("LeadPipe")|CheckInventory("Twig")|CheckInventory("PipeWrench")) 
carrytypeC ++;

else if (CheckInventory("SprayCanBLU")|CheckInventory("SprayCanRED")|CheckInventory("SprayCanYLL")|CheckInventory("SprayCanPNK")|CheckInventory("SprayCanORG")|CheckInventory("SprayCanGRN")|CheckInventory("M1Carbine")|CheckInventory("PoolCue")|CheckInventory("Shovel")) 
carrytypeD ++;

else if (CheckInventory("LCrossbow")|CheckInventory("LChainsaw")|CheckInventory("Shotgun2")|CheckInventory("Beretta")) 
carrytypeE ++;

  

carryammount = carrytypeA + carrytypeB + carrytypeC + carrytypeD + carrytypeE;
Carrypercent = FixedDiv(Int2Fix(100), Int2Fix(carryammount));

CarryPcntA = FixedMul(carrypercent,Int2Fix(carrytypeA));
CarryPcntB = FixedMul(carrypercent,Int2Fix(carrytypeB));
CarryPcntC = FixedMul(carrypercent,Int2Fix(carrytypeC));
CarryPcntD = FixedMul(carrypercent,Int2Fix(carrytypeD));
CarryPcntE = FixedMul(carrypercent,Int2Fix(carrytypeE));

CarryScore = (FixedMul(CarryPcntA, Int2Fix(5)) + FixedMul(CarryPcntB, Int2Fix(4)) + FixedMul(CarryPcntC, Int2Fix(3)) + FixedMul(CarryPcntD, Int2Fix(2)) + CarryPcntE) >> 16;
//CarryScore = ((CarryPcntA*5) + (CarryPcntB*4) + (CarryPcntC*3) + (CarryPcntD*2) + CarryPcntE);
}

else  //if murd
  {
  if (murdswitch == false) {murdswitch = true; carryammount = 0; carrytypeA = 0; carrytypeB = 0; carrytypeC = 0; carrytypeD = 0; carrytypeE = 0;} //reset score when chosen as murd
  If (CheckWeapon("MurderKnife")) carrytypeB++;
  else carrytypeA++;
  
  carryammount = carrytypeA + carrytypeB;
  Carrypercent = FixedDiv(Int2Fix(100), Int2Fix(carryammount));
  
  CarryPcntA = FixedMul(carrypercent,Int2Fix(carrytypeA));
  CarryPcntB = FixedMul(carrypercent,Int2Fix(carrytypeB));
  
  CarryScore = (FixedMul(CarryPcntA, Int2Fix(2)) + FixedMul(CarryPcntB, Int2Fix(1))) >> 16;
  }

}
//debug
//print(s:"A ", f:CarryPcntA, s:"   B ", f:CarryPcntB, s:"   C ", f:CarryPcntC, s:"   D ", f:CarryPcntD, s:"   E ", f:CarryPcntE, s:"\n\n\nALL ", i:CarryScore);

}
if (Char2Int(GetChar(GetCvarString("WDISTATE"), 7)) == 1) Terminate;
delay(1);
}


/*
while(MUTILATOR_MOD() == 1)
 {
//MURDMARKERS   code by Kaminsky
if ( (CheckInventory("MurdererKey")) && (GetCVAR("MDISTATE") == 2))
{
//Log(s:"MKAY");
//SetHUDSize(1024, 768, 0);	
        for(ppl = 0; ppl < 32; ppl++)
        {
            wX = GetActorX(TID_START + ppl) - GetActorX(TID_START + ConsolePlayerNumber());
            wY = GetActorY(TID_START + ppl) - GetActorY(TID_START + ConsolePlayerNumber());
            wZ = GetActorZ(TID_START + ppl) + (GetActorProperty(TID_START + ConsolePlayerNumber(), APROP_HEIGHT) >> 1) - (GetActorZ(TID_START + ConsolePlayerNumber()));

            rX = FixedMul(wX, cos(markang)) + FixedMul(wY, sin(markang));
            rY = -FixedMul(wX, sin(markang)) + FixedMul(wY, cos(markang));

            wX = FixedMul(rX, cos(markpch)) + FixedMul(wZ, sin(markpch));
				halfWidth = GetScreenWidth() >> 1;
				halfHeight = GetScreenHeight() >> 1;
				markang = GetActorAngle(TID_START + ConsolePlayerNumber());
				markpch = GetActorPitch(TID_START + ConsolePlayerNumber());
				height = GetActorViewHeight(TID_START + ConsolePlayerNumber());
				  
		       if  (
			       (GetActorX(TID_START + ppl) > GetActorX(TID_START + ConsolePlayerNumber()) + int2fix(BoxRadius))  && 
			       (GetActorX(TID_START + ppl) < GetActorX(TID_START + ConsolePlayerNumber()) - int2fix(BoxRadius))  &&   
			       (GetActorY(TID_START + ppl) > GetActorY(TID_START + ConsolePlayerNumber()) + int2fix(BoxRadius))  &&
			       (GetActorY(TID_START + ppl) < GetActorY(TID_START + ConsolePlayerNumber()) - int2fix(BoxRadius))  &&
			       (ppl != ConsolePlayerNumber())  &&
				   (wX > 0)  &&
				   (((ClassifyActor(TID_START + ppl) & (ACTOR_PLAYER)) && (ClassifyActor(TID_START + ppl)&(ACTOR_ALIVE))))
				   )
				   
				   
			         {
					  DrawY = int2fix(GetScreenHeight()/12);
					  
					  
					  wZ = -FixedMul(rX, sin(markpch)) + FixedMul(wZ, -cos(markpch));

					  imageX = (halfWidth << 16) - (halfWidth * FixedDiv(rY, wX));
					  imageY = (halfHeight << 16) + FixedMul(halfHeight * 1.6, FixedDiv(wZ, wX));

					  SetHudSize(halfWidth << 1, halfHeight << 1, true);
					  SetFont("WDIHID3"); 
					  HudMessage(s:"A"; HUDMSG_PLAIN, 33500 + ppl, CR_UNTRANSLATED, imageX & 0xFFFF0000, DrawY, 0.1);
					 }					 
        }
}	
  
if (GetCVAR("MDISTATE") > 2) terminate;
delay(1);	  	  
}
*/













}


Script "WDI_PlayaScore"  (int password, int Score) NET {if (MDI_PassMatch(password))  {TakeInventory("WdiPlayaScore", 9999); GiveInventory("WdiPlayaScore", Score);}}
//////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////  
//////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
//////////////////////////////////////////////////////
////////////////////////////////////////////////////
//////////////////////////////////////////////////
////////////////////////////////////////////////
//////////////////////////////////////////////
////////////////////////////////////////////
//////////////////////////////////////////
////////////////////////////////////////
//////////////////////////////////////
////////////////////////////////////
//////////////////////////////////
////////////////////////////////
//////////////////////////////                MODIFIERS
////////////////////////////
//////////////////////////
////////////////////////
//////////////////////
////////////////////
//////////////////
////////////////
//////////////
////////////
//////////
////////
//////
////
//
Script "VOTECASE0" (void)  {}



Script "WHILEVOTING1" (void)
{
SetFont("smallfont");HudMessageBold (s:"ALL-TIME NIGHTMARE WINNERS ARE:"; HUDMSG_FADEOUT, 0, CR_DARKRED, 0.5, 0.15, 10.0, 1.0);
HudMessageBold (s:GetCvarString("wdiNMwinners"); HUDMSG_FADEOUT, 0, CR_DARKRED, 0.5, 0.18, 10.0, 1.0);
SetActivator(0, AAPTR_NULL);
while(TRUE)
{
GiveActorInventory(TID_START+gameinfo[2], "BlockEvenMurd", 1);
Wdi_Setinvulnerable(TRUE);
delay(5);
}
}


Script "KEEPMURDOFFWALLS" (void)
{
SetActivator(0, AAPTR_NULL);
while(CheckActorInventory(TID_START+gameinfo[2],"MurdBackpack"))
{
GiveActorInventory(TID_START+gameinfo[2], "BlockEvenMurd", 1);
Wdi_Setinvulnerable(TRUE);
delay(2);
}
delay(2);
GiveActorInventory(TID_START+gameinfo[2], "BlockEvenMurd", 1);
Wdi_Setinvulnerable(FALSE);
}

Script "VOTECASE1" (int add) // NIGHTMARE MODE FOR MURDERER 1 ZEBERPAL + DEA
{
SetActivator(0, AAPTR_NULL);

if (add == 44) {ACS_NAMEDEXECUTE("WHILEVOTING1", 0); terminate;}
if (add == 45) {ACS_NAMEDTERMINATE("WHILEVOTING1", 0); ACS_NAMEDEXECUTE("KEEPMURDOFFWALLS", 0);TERMINATE;}
if (add == 46) {ACS_NAMEDTERMINATE("WHILEVOTING1", 0); delay(3); GiveActorInventory(TID_START+gameinfo[2],"MurderDoorUnblocker", 1); Wdi_Setinvulnerable(FALSE); terminate;}

if (GetCvar("wdi_TopMurderer1score") < 500) { SetResultValue(93); terminate;}  //not enough playersSetResultValue(1)
if (PlayerCount() < 6) { SetResultValue(94); terminate;}  //not enough players
if (!CheckActorInventory(TID_START+gameinfo[2],"MurdBackpack")) { SetResultValue(96); terminate;}  //murderer has unpacked his backpack, aborting
//Wdi_Setinvulnerable(TRUE); //while voting all players in godmode.
WdiVote[10] = 0; SetResultValue(98); //98 only murderer decides (for heavy gameplay changes cases)
if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
delay(35*3);
GiveActorInventory(TID_START+gameinfo[2], "WDINMARER", 1);
int counter = 0;
int ammocnt = 0;
int rand = 0;
int idx = 0;

delay(35);
Wdi_Setinvulnerable(FALSE);
endcam[0] = 1; //will multiply the score
GiveActorInventory(TID_START+gameinfo[2], "BlockEvenMurd", 1); //blocks murd from walls
delay(5);


	
// fuck RNG, 
	
idx = 0; counter = 2; SpawnSpotForced("FakeBeretta", TID_START+idx, 0, 0); while(counter > 0) {SpawnSpotForced("PistolClip", TID_START+idx, 0, 0); counter--;} GiveActorInventory(TID_START+idx, "PistolAmmo", 10);  
idx = 1; counter = 2; SpawnSpotForced("FakeBeretta", TID_START+idx, 0, 0); while(counter > 0) {SpawnSpotForced("PistolClip", TID_START+idx, 0, 0); counter--;} GiveActorInventory(TID_START+idx, "PistolAmmo", 10); 
idx = 2; counter = 8; SpawnSpotForced("FakeShotgun", TID_START+idx, 0, 0); while(counter > 0) {SpawnSpotForced("NewShell", TID_START+idx, 0, 0); counter--;} GiveActorInventory(TID_START+idx, "SuperShells", 10); 
idx = 3; counter = 2; SpawnSpotForced("FakeM1", TID_START+idx, 0, 0); while(counter > 0) {SpawnSpotForced("M1Ammo", TID_START+idx, 0, 0); counter--;} GiveActorInventory(TID_START+idx, "M1CarbineClipIn", 10); 
idx = 4; SpawnSpotForced("FakeChainsawfix", TID_START+idx, 0, 0); GiveActorInventory(TID_START+idx, "Gasoline", 999); counter--;
idx = 5; SpawnSpotForced("FakeShovel", TID_START+idx, 0, 0); GiveActorInventory(TID_START+idx, "Gasoline", 999); counter--;


// at this point the rest players doesnt matter, just give them any
while(idx < 31)
{
rand = random(13,18);
if (rand == 14) {rand = 16;}
SpawnSpotForced(buywep[rand], TID_START+idx, 0, 0);
if (rand == 13) {SpawnSpotForced("M1CarbineClipIn", TID_START+idx, 0, 0);}
if (rand == 17) {SpawnSpotForced("NewShell", TID_START+idx, 0, 0);
               SpawnSpotForced("NewShell", TID_START+idx, 0, 0); 
			   SpawnSpotForced("NewShell", TID_START+idx, 0, 0); 
			   SpawnSpotForced("NewShell", TID_START+idx, 0, 0); 
			   SpawnSpotForced("NewShell", TID_START+idx, 0, 0); 
			   SpawnSpotForced("NewShell", TID_START+idx, 0, 0); 
			   SpawnSpotForced("NewShell", TID_START+idx, 0, 0); 
			   SpawnSpotForced("NewShell", TID_START+idx, 0, 0); }
if (rand == 18) {SpawnSpotForced("PistolClip", TID_START+idx, 0, 0);
               SpawnSpotForced("PistolClip", TID_START+idx, 0, 0);}
GiveActorInventory(TID_START+idx, buyAmmotype[rand], 10);              
GiveActorInventory(TID_START+idx, "Stimpack", 2);
GiveActorInventory(TID_START+idx, "Gasoline", 999);
idx++;
delay(1); 
}

for(int l = 0; l < 32; l++)
{
GiveActorInventory(TID_START+l, buyAmmotype[rand], 10);              
GiveActorInventory(TID_START+l, "Stimpack", 2);
GiveActorInventory(TID_START+l, "Gasoline", 999);
}


delay(35);
while(gameinfo[1] == GAMESTATE_GAMEACTIVE)
{
delay(3);
}
if (playinfo[4] == END_MURLOSE) {terminate;}
if (playinfo[4] == END_MURSUICIDE) {terminate;}
if (playinfo[4] == END_INOLOSE) 
{
delay(35*3);
SetHUDSize(1024, 768, 0);
setfont("BIGFONT");
HudMessageBold (n:gameinfo[2]+1, s:" MANAGED TO WIN THE GAME ON NIGHTMARE DIFFICULTY!"; HUDMSG_FADEOUT, 0, CR_GREY, 512.0, 384.0, 4.0, 1.0);
str addwinner = StrParam(s:GetCvarString("wdiNMwinners"), s:"\cc,\n\n\cc", s:Strftime(SystemTime(), "%Y", true), s:"/", s:Strftime(SystemTime(), "%m", true), s:"/", s:Strftime(SystemTime(), "%d", true), s:"   ", n:gameinfo[2]+1);
SetCvarString("wdiNMwinners", addwinner);
Log(n:gameinfo[2]+1, s:" has won wdinightmare.");



//if ((GetCvar("SeasonOnHold") == false) && (getcvar("RoundsLeft")>1) && (PlayerCount() >= 4)) 
  //{
  //SetCvar((strParam(s:"wdi_TopMurdererScore",i:wdimdiadd[16], s:"score")), (GetCVAR(strParam(s:"wdi_TopMurderer",i:wdimdiadd[16], s:"score")))*2);//) >> 16); //bonus record
  //}

}
//////////////////////////////////your stuff ends here
}


Script "GiveWarn" (void)
{
if((CheckInventory("MurdererKey")) && (endcam[0] == 1)) {Print(s:" Don't come too close to HAND markers!"); DamageThing(25, MOD_EXIT);}
}



Script "WDINMARER" (void) CLIENTSIDE// NIGHTMARE MODE FOR MURDERER
{
   LocalAmbientSound("YZLAUGHA", 127);
   SetHUDSize(640, 480, 0);
   SetFont("M_NMARE");
   HudMessage(s:"A"; HUDMSG_FADEOUT, 0,CR_DARKRED, 320.0, 240.0, 5.0, 2.0 );
   SetFont("smallfont");
   HudMessage(s:"Avoid murderer's handwall markers to get away from the sudden death!"; HUDMSG_FADEOUT, 0,CR_DARKRED, 320.0, 320.0, 5.0, 2.0 );
}




// CRAZY MODE 2

str bullshitems[20] = {
"WDI18bombdropped", //0
"SmokeCanister",
"ShotgunTrap",
"WDI18bombdropped",
"DeployingStimGas",
"WDI18bombdropped",
"Trite",
"StealthCamouflage",
"Doom3Imp",
"COOP_Zombie_with_axe",
"PoliceRaider", //10
"BoltSpawner",
"SwampSnake",
"fireworksLighting",
"BearTrapy",
"SmokeCanister",
"ChainsawZombie",
"WDI18bombdropped", //0
"Trite",
"ZHAPlatformSpawner"
};

Script "VOTECASE2" (int add) // BULLSHITEMS 2
{
SetActivator(0, AAPTR_NULL);
if (add == 44) {terminate;}
if (add == 45) {terminate;}
if (add == 46) {terminate;}
{
if ((GetCvar("SeasonOnHold") == false) && (getcvar("RoundsLeft")>1) && (PlayerCount() >= 4)) {WdiVote[10] = 1; SetResultValue(100); }
else {WdiVote[10] = 0; SetResultValue(99);}
}
if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
delay(35*3);
while(playercount() > 0)
{
SpawnSpotForced(bullshitems[random(0, 19)], GetCvar("Specspot"), 0, random(1,254));
delay(35*random(5,10));
}
//////////////////////////////////your stuff ends here
}


Script "WHILEVOTING3" (void)
{
SetFont("smallfont");
HudMessageBold (s:"Murderer's scoreboard record is nerfed X2 in this mode"; HUDMSG_FADEOUT, 0, CR_DARKRED, 0.5, 0.15, 10.0, 1.0);
}

Script "VOTECASE3" (int add) // ENDINGS ACTIVATE IN EX MAPS
{
SetActivator(0, AAPTR_NULL);
if (add == 44) {ACS_NAMEDEXECUTE("WHILEVOTING3", 0); terminate;}
if (add == 45) {terminate;}
if (add == 46) {terminate;}
if (GetLevelInfo(LEVELINFO_LEVELNUM)<31 || GetLevelInfo(LEVELINFO_LEVELNUM)>33) { SetResultValue(95); terminate;} //map is wrong
 
WdiVote[10] = 1; SetResultValue(100); //100 murderer decides first, then innocents do (for certain changes cases)
if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
delay(35*3);
endcam[0] = 2; //don't count it as a normal score

if (GetLevelInfo(LEVELINFO_LEVELNUM)==31) {ACS_ExecuteAlways(44,0); terminate;}
if (GetLevelInfo(LEVELINFO_LEVELNUM)==32) 
{ACS_ExecuteAlways(44,0); 
        Delay(1);
		SetLineBlocking(4, BLOCK_NOTHING); //stufff
		SetLineBlocking(142, BLOCK_NOTHING);
		SetLineTexture(142, SIDE_FRONT, TEXTURE_MIDDLE, "-");
		SetLineTexture(7, SIDE_FRONT, TEXTURE_MIDDLE, "XLIGHT-X");
		SetLineTexture(7, SIDE_BACK, TEXTURE_MIDDLE, "XLIGHT-X");
		TranslucentLine(7, 190, 1);
		SetLineBlocking(31, BLOCK_NOTHING);
		SetLineTexture(31, SIDE_FRONT, TEXTURE_MIDDLE, "-");
		SetLineTexture(47, SIDE_FRONT, TEXTURE_MIDDLE, "XCTX240");
		SetLineSpecial (4, ACS_Execute, 51);
		SetLineSpecial (31, ACS_Execute, 101);
		SetLineSpecial (33, ACS_Execute, 63);
		SetMusic(Random("B3OZ1L5Q", "E9H4VZ3A"));
		//ACS_Execute(811,0);
		SpawnSpot("GluttonousRat", 184, 0, 0);
		Delay(1); terminate;}
if (GetLevelInfo(LEVELINFO_LEVELNUM)==33) 
{
switch(random(1,2))
{
case 1:
SetLineSpecial(51, ACS_Execute, 357);
ACS_EXECUTE(811,0);
ACS_EXECUTE(812,0);
break;
case 2:
ACS_EXECUTE(566,0);
break;
}
}		
//////////////////////////////////your stuff ends here
}







Script "WHILEVOTING4" (void)
{
SetFont("smallfont");
HudMessageBold (s:"Murderer's scoreboard record is nerfed X2 in this mode"; HUDMSG_FADEOUT, 0, CR_DARKRED, 0.5, 0.15, 10.0, 1.0);
}

Script "VOTECASE4" (int add) // (everyone is a murd) 4
{
SetActivator(0, AAPTR_NULL);
if (add == 44) {ACS_NAMEDEXECUTE("WHILEVOTING4", 0); terminate;}
if (add == 45) {terminate;}
if (add == 46) {terminate;}

WdiVote[10] = 1; SetResultValue(100); //100 murderer decides first, then innocents do (for certain changes cases)
if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
delay(35*3);

endcam[0] = 2; //don't count it as a normal score

for(int l = 0; l < 32; l++)
{if(!CheckActorInventory(TID_START+l, "MurdererKey"))
{
GiveActorInventory(TID_START+l, "MurderKnife", 1);
GiveActorInventory(TID_START+l, "ChlorineGas", 1); // Poison Gas x1
GiveActorInventory(TID_START+l,"TripShotgun", 2); // TripWire Shotguns x2
GiveActorInventory(TID_START+l,"SmokeBomb", 2); // Smoke Bombs x2
GiveActorInventory(TID_START+l,"RemoteCamera", 1); // Remote Camera x1
GiveActorInventory(TID_START+l,"FakeStim", 3); // Fake Stimpack x3
GiveActorInventory(TID_START+l,"SoundEmitter", 4); // Sound Emitters x4
}
} 
//////////////////////////////////your stuff ends here
}

Script "VOTECASE5" (int add) // LIZA
{
SetActivator(0, AAPTR_NULL);
if (add == 44) {terminate;}
if (add == 45) {terminate;}
if (add == 46) {terminate;}
{
WdiVote[10] = 0; SetResultValue(99);
}
if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
delay(35*3);
SpawnSpotForced("WDIALina", GetCvar("Specspot"), 0, random(1,254));
delay(35);

//////////////////////////////////your stuff ends here
}


script "afterspecvote" (int result)
{
switch(result)
{
case 0: SetCvar("GhostedStart", 0); SetCvar("DwangoStart", 0); break;
case 1: SetCvar("GhostedStart", 666); SetCvar("DwangoStart", 666); break;
}
MDIGlobal[8] = 3;
}











Script "VOTECASE6" (int add, int voternum) // vote in advance
{
SetActivator(0, AAPTR_NULL);
if (add == 44) {terminate;}
if (add == 45) {terminate;}
if (add == 46) {terminate;}

if (WdiVote[11] < 2) {SetResultValue(1); TERMINATE;}

WdiVote[10] = 0; SetResultValue(98); //98 only murderer decides 
if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
delay(35);
WdiVote[11] = 1;
//////////////////////////////////your stuff ends here
}







Script "WHILEVOTING7" (void)
{
SetFont("smallfont");
HudMessageBold (s:"Murderer's scoreboard record is nerfed X2 in this mode"; HUDMSG_FADEOUT, 0, CR_DARKRED, 0.5, 0.15, 10.0, 1.0);
}

Script "VOTECASE7" (int add) // one hit mode
{
SetActivator(0, AAPTR_NULL);
if (add == 44) {ACS_NAMEDEXECUTE("WHILEVOTING7", 0); terminate;}
if (add == 45) {terminate;}
if (add == 46) {terminate;}

WdiVote[10] = 1; SetResultValue(100); //100 murd, first, then innocents
if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
delay(35*3);
endcam[0] = 2; //don't count it as a normal score

while(gameinfo[1] == GAMESTATE_GAMEACTIVE)
{
for(int k = 0; k < 32; k++) 
{
SetActorProperty(TID_START+k, APROP_DamageFactor, 50.0); 
GiveActorInventory(TID_START+k, "TakeFireWeapons", 1);
}
delay(35);
}
//////////////////////////////////your stuff ends here
}

Script "TakeFireWeapons" (void)
{
If ((CheckInventory("Beretta")) || (CheckInventory("WDIBeretta")) || (CheckInventory("Beretta")) || (CheckInventory("Shotgun2")) || (CheckInventory("M1Carbine")) || (CheckInventory("LCrossbow")) || (CheckInventory("LCrossbow")) || (CheckInventory("ChlorineGas")) || (CheckInventory("Brick")))
{TakeInventory("Beretta", 99);TakeInventory("WDIBeretta", 99);TakeInventory("Shotgun2", 99);TakeInventory("M1Carbine", 99);TakeInventory("LCrossbow", 99); TakeInventory("Brick", 99); TakeInventory("ChlorineGas", 99); TakeInventory("Slot1Filled", 99);}

}







Script "WHILEVOTING8" (void)
{
//int ALLVOTES;
while(true)
{
/*if (MDIglobal[3] < GetCvar("VOTEYES"))*/ MDIglobal[3] = WdiVote[5];
/*if (MDIglobal[4] < GetCvar("VOTENO"))*/ MDIglobal[4] = WdiVote[6];
//ALLVOTES = GetCvar("VOTEYES") + GetCvar("VOTENO");
//MDIglobal[5] = Playercount() - ALLVOTES;

//     if (MDIglobal[3] >  MDIglobal[4]) MDIglobal[2] = (FixedDiv(Int2Fix(GetCvar("VOTEYES")),Int2Fix(ALLVOTES)) * 100) >> 16;
//else if (MDIglobal[3] <= MDIglobal[4]) MDIglobal[2] = (FixedDiv(Int2Fix(GetCvar("VOTENO")), Int2Fix(ALLVOTES)) * 100) >> 16;


delay(1);
}
}


Script "VOTECASE8" (int add) // allows mdi
{
SetActivator(0, AAPTR_NULL);
if (add == 44) {ACS_NAMEDEXECUTE("WHILEVOTING8", 0); terminate;}
if (add == 45) {ACS_NAMEDEXECUTE("aftermdivote", 0, 0);}
if (add == 46) {ACS_NAMEDEXECUTE("aftermdivote", 0, 1);}


if (WdiVote[9] == true) {SetResultValue(1); terminate;}

WdiVote[10] = 0; SetResultValue(92);

if (add < 1 ) {TERMINATE;}
//////////////////////////////////put your stuff after this line 
MDIGlobal[0] = 1; //alowmdi
MDIGlobal[1] = 10; // reset possible vote to mdi count
MDIVoteDate = strparam(s:Strftime(SystemTime(), "%Y", true), s:"/", s:Strftime(SystemTime(), "%m", true), s:"/", s:Strftime(SystemTime(), "%d", true), s:"  ", s:Strftime(SystemTime(), "%H", true), s:":", s:Strftime(SystemTime(), "%M", true), s:" UTC");

ACS_NAMEDTERMINATE("WHILEVOTING8", 0);
//////////////////////////////////your stuff ends here
}


script "aftermdivote" (int result)
{
ACS_NAMEDTERMINATE("WHILEVOTING8", 0);
WdiVote[9] = true;
switch(result)
{
case 0: MDIGlobal[0] = 1; break;
case 1: MDIGlobal[0] = 0; break;
}
MDIGlobal[1] = 10; 
//Set the time vote was on
MDIVoteDate = strparam(s:Strftime(SystemTime(), "%Y", true), s:"/", s:Strftime(SystemTime(), "%m", true), s:"/", s:Strftime(SystemTime(), "%d", true), s:"  ", s:Strftime(SystemTime(), "%H", true), s:":", s:Strftime(SystemTime(), "%M", true), s:" UTC");
}







Script "VOTECASE9" (int add) // Poll
{
SetActivator(0, AAPTR_NULL);
if (add == 44) {terminate;}
if (add == 45) {terminate;}
if (add == 46) {terminate;}

WdiVote[10] = 0; SetResultValue(92);
if (add < 1 ) {TERMINATE;}

//////////////////////////////////put your stuff after this line 
 
//////////////////////////////////your stuff ends here
}

















Script "MasksOff" (void)
{
If (WdiVote[12] == 1) 
{
int password = GetCvar("mdispecial1") * PlayerCount() - GetCvar("mdispecial6"); 
ACS_namedExecute("WDI_Voted", 0, password, 2, 0); 
}

if ((wdimdiadd[3]<=0) && (CheckInventory("MurdererKey")))
{
ACS_namedTerminate("S_TakeExtraSanityy", 0);
fadeto(128, 8,8, 0.15, 0.025);
wdimdiadd[3]=1; 
Wdi_Setinvulnerable(FALSE);
LocalAmbientSound("pickups/ammo", 127);
TakeInventory("MurdBackpack", 99);
	//Give Traps
	GiveInventory("MurderDoorUnblocker", 1); 
	GiveInventory("ChlorineGas", 1); // Poison Gas x1
	GiveInventory("TripShotgun", 2); // TripWire Shotguns x2
	GiveInventory("SmokeBomb", 2); // Smoke Bombs x2
	GiveInventory("RemoteCamera", 1); // Remote Camera x1
	GiveInventory("FakeStim", 3); // Fake Stimpack x3
	GiveInventory("SoundEmitter", 4); // Sound Emitters x4
{
if (GetLevelInfo(LEVELINFO_LEVELNUM)==33) {GiveInventory("SlenderMurdWall", 1);} //wdiex03 fix
}
delay(5);
fadeto(0, 0, 0, 0.0, 2.0);
}
}
